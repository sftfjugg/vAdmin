#cicdinfo.sh-v3.0兼容cicdinfo.sh-v2.0

#判断是否git项目
git log --oneline -1 > /dev/null 2>&1
#11111start
if [ $? -eq 0 ]; then

if [[ $1 =~ dev2 ]];then
#压测环境不需要记录
exit 1

fi

#需求进入未提测
pulltime=`date --date='yesterday' "+%Y-%m-%d %H:%M:%S"`
/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** cicdadmin -e 'set names utf8;INSERT INTO releasecicd(productname,rid,fid,rnotes,openedby,openeddate) SELECT pl.name, p.title, s.id, s.title, s.openedBy, s.openedDate FROM zentao2.zt_story s LEFT JOIN zentao2.zt_productplan p ON p.id = s.plan LEFT JOIN zentao2.zt_product pl ON pl.id = s.product WHERE s.openedDate >= "$pulltime" and s.status="active" and s.id not in(select DISTINCT fid from releasecicd)'

/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** cicdadmin -e 'set names utf8;UPDATE releasecicd set fidstatus="未提测" WHERE cicdtime is null and deploytime is null and fidstatus is null;'

#需求不需要发版的，设置进入已上线状态
#idlist=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -N -e 'set names utf8;select a.id from releasecicd a left join ( SELECT r.id,r.fid,status from releasecicd r LEFT JOIN zentao2.zt_testtask t on r.rnotes = t.name WHERE t.status="done" and r.cicdtime is null and r.fidstatus="未提测") b on a.id = b.id where a.id in ( SELECT r.id from releasecicd r LEFT JOIN zentao2.zt_testtask t on r.rnotes = t.name WHERE t.status="done" and r.cicdtime is null and r.fidstatus="未提测");'`

#for iid in ${idlist[*]}
#do
#        /usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e 'set names utf8;UPDATE releasecicd set fidstatus = "已发生产",deploytime=NOW() where id='$iid';'
#        if [ $? != 0 ]; then
#                echo "更新失败"
#        fi
#done

#获取多测试环境数据
#22222start
if [[ $1 =~ test2 ]] || [[ $1 =~ test3 ]]
then
     appname=`echo $1 | awk -F'-' '{print $3}'`
else
     appname=`echo $1 | awk -F'-' '{print $2}'`
fi
#22222end
echo appname: $appname

branch=`git name-rev --name-only HEAD|awk -F'/' '{print $NF}'`
echo branch: $branch

onlinecommit=`ssh localadmin@10.170.224.117 "cd /opt/applications/onlineRevision && cat $appname*revision" |awk -F'master@' '{print $2}'`

#解决取uv项目生产版本前面出现实际看不到的空格的bug
onlinecommit=`echo $onlinecommit`

echo onlinecommit: $onlinecommit

onlinerverfile="/opt/applications/onlineRevision/$appname*revision"

if [ ! -f $onlinerverfile ]; then

#记录新应用或者已经上线的应用--没对应的线上版本文件
echo "$appname" "$branch" "$curcommit" >> /opt/applications/newapp/chk.log

fi


if [ -f $onlinerverfile ]; then

#记录线已经上线的应用--没对应的线上版本号(如非master分支)
if [[ "$onlinecommit" == "" ]];then

echo "$appname" "$branch" "$curcommit" >> /opt/applications/onlinecommit/chk.log
exit 1

fi

fi

curcommit=`git log -1 --pretty=oneline|awk '{print $1}'`
echo curcommit: $curcommit

#xxxxxstart
if [[ "$curcommit" == "$onlinecommit" ]];then
echo "代码没改动"
exit 1
fi
#xxxxxend

developer=`git show $curcommit| sed -n -e '/Author/p'| awk '{print $2}'`
echo developer: $developer

deploytime=`date +"%Y-%m-%d"`
cicdtime=`date +"%Y-%m-%d %H:%M:%S"`

array=($(git diff $onlinecommit $curcommit --name-only))
echo code_list:
for i in ${array[@]}
do
        echo $i
done

#echo dev_code: `git diff $onlinecommit $curcommit| grep -v "diff --git"| grep -v index`

echo code_count: `git diff $onlinecommit $curcommit| grep -v "diff --git"| grep -v index|wc -l`

#rid=`git log --graph |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/{if(i>1)print x;x=$0;i++}'| sed -n -e '/rid/p'|awk -F'[' '{print $2 $3}' |awk -F']' '{print $1 $2}'|awk -F'fid' '{print $1 $2}'| awk '{a[$1]=a[$1] ","$2} END{for (i in a)print i,a[i]}' | awk '{print $1}'| sed 's/://g'|sed 's/^[ \t]*//g'`
###################################
#仅一个release计划,1分支或多分支合并情况下，rid的获取方法#
#ridinfo=`git log --graph |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/{if(i>1)print x;x=$0;i++}'| sed -n -e '/rid/p'`
#rid=`/opt/scm_tools/deploy/ridfid "$ridinfo"| sed -n '1p'`
#echo rid: $rid
#fid=`git log --graph |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/{if(i>1)print x;x=$0;i++}'| sed -n -e '/rid/p'|awk -F'[' '{print $2 $3}' |awk -F']' '{print $1 $2}'| awk -F'fid' '{print $1 $2}'| awk '{a[$1]=a[$1] ","$2} END{for (i in a)print i,a[i]}' |awk '{print $2}'| sed 's/,/\t/g'|sed 's/^[ \t]*//g'`
#fid=`/opt/scm_tools/deploy/ridfid "$ridinfo"| sed -n '2p'`
####################################

#多个release计划,1分支或多分支合并情况: 先正则清洗，再合并多行，再合并多列，最后去重#

randlog="/opt/applications/jenkinsresult/`date +%s%N | md5sum |cut -c 1-9`.log"
echo randlog: $randlog

randlogb="/opt/applications/jenkinsresult/`date +%s%N | md5sum |cut -c 1-9`.log"
echo randlogb: $randlogb

if [ ! $onlinecommit ];then
#新应用

#echo "git log --graph |sed -n -e '/rid.*\[/p'> $randlog"
echo "git log |sed -n -e '/rid.*\[/p'> $randlog"
git log |sed -n -e '/rid.*\[/p'> $randlog
echo ridinfo: `cat $randlog`

echo "git log |sed -n -e '/bid.*\[/p'> $randlogb"
git log |sed -n -e '/bid.*\[/p'> $randlogb
echo bidinfo: `cat $randlogb`

else

#已发应用

echo "git log |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/'|sed -n -e '/rid.*\[/p'> $randlog"
git log |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/'|sed -n -e '/rid.*\[/p'> $randlog
echo ridinfo: `cat $randlog`

echo "git log |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/'|sed -n -e '/bid.*\[/p'> $randlogb"
git log |awk  '/'"$curcommit"'/,/'"$onlinecommit"'/'|sed -n -e '/bid.*\[/p'> $randlogb
echo bidinfo: `cat $randlogb`

fi

#33333start
if [[ `cat $randlog |wc -l` -eq 0 ]] && [[ `cat $randlogb |wc -l` -eq 0 ]];then

echo "开发没写rid或者bid"
rid="开发没写rid或者bid"

echo "$developer" "$cicdtime" "$appname" "$branch" "$curcommit" >> /opt/applications/noid/chk.log

fidstatus='已提测'

#44444start
if [ ! -f "/opt/applications/jenkinsCount/${appname}.count" ];then
echo 0 > /opt/applications/jenkinsCount/${appname}.count
fi

#44444end
bcount=`cat /opt/applications/jenkinsCount/${appname}.count`
civersion=${branch}.${curcommit}.build.`date "+%Y-%m-%d_%H:%M:%S"`.$(($bcount+1))
echo $(($bcount+1)) > /opt/applications/jenkinsCount/${appname}.count
echo civersion: $civersion

#将废弃
/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** zentao2 -e "set names utf8;insert into releasenotes(rid,appname,civersion,commitid,status,deploytime,developer) values('$rid','$appname','$civersion','$curcommit','$fidstatus','$deploytime','$developer');"

exit 1

fi
#333333end

#55555start
if [[ "`cat $randlog |wc -l`" -ne 0 ]];then

#rid循环
/opt/scm_tools/deploy/ridfidaddv2 $randlog |awk '{a[$1]=a[$1] ","$2} END{for (i in a)print i,a[i]}'|sed 's/,/ /g'|sed 's/，/ /g'| while read line; do 

rid=`echo $line | awk '{print $1}';`
echo rid: $rid

#获取fid列表
fid=`echo $line | awk '{$1="";sub(" ", "");print}';`

#fid去重
fid=`echo ${fid[*]}|awk '{for(i=1;i<=NF;i++)a[$i,NR]++}{for(j in a){split(j,b,SUBSEP);if(b[2]==NR)printf b[1]" "} printf "\n"}'| sed -e 's/,/ /g'| sed -e 's/，/ /g'`
echo fid: $fid

echo rid:$rid  fid:$fid  $appname  $developer  $cicdtime  >> /opt/applications/ridfid/chk.log

arnotes=""

for ifid in ${fid[*]}
do

rnote=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select title from zt_story WHERE id='$ifid';"`

openedby=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedBy from zt_story WHERE id='$ifid';"`

openeddate=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedDate from zt_story WHERE id='$ifid';"`

########new

g_civersion=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** cicdadmin  -N -e "set names utf8; select civersion from releasecicd WHERE rid='$rid' and fid='$ifid' and appname='$appname';"`
g_cicdtime=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** cicdadmin  -N -e "set names utf8; select cicdtime from releasecicd WHERE rid='$rid' and fid='$ifid' and appname='$appname';"`
g_num=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************** cicdadmin  -N -e "set names utf8; select num from releasecicd WHERE rid='$rid' and fid='$ifid' and appname='$appname';"`

fidstatus='已提测'
#66666start
if [ ! -f "/opt/applications/jenkinsCount/${appname}.count" ];then
echo 0 > /opt/applications/jenkinsCount/${appname}.count
fi
#66666end
bcount=`cat /opt/applications/jenkinsCount/${appname}.count`
civersion=${branch}.${curcommit}.build.`date "+%Y-%m-%d_%H:%M:%S"`.$(($bcount+1))
echo $(($bcount+1)) > /opt/applications/jenkinsCount/${appname}.count
echo civersion: $civersion

cicdtime=`date +"%Y-%m-%d %H:%M:%S"`

########
#77777start
if [[ "`echo $civersion | grep "master"`" == "" ]];then

#88888start
if [ -z "$g_civersion" ]; then
#if [[ "$g_civersion" == "" ]] && [[ "$deploytime" == "" ]];then
    num=1
    /usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;insert into releasecicd(rid,fid,rnotes,appname,civersion,openedby,openeddate,fidstatus,cicdtime,num,commitid) values('$rid','$ifid','$rnote','$appname','$civersion','$openedby','$openeddate','$fidstatus','$cicdtime','$num','$curcommit');"

    #从未提测进入提测
    testid=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -N -e 'SELECT id from releasecicd WHERE cicdtime is null and fid in (SELECT DISTINCT fid from releasecicd d WHERE d.cicdtime is not null)'`
    for tid in ${testid[*]}
    do
	/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "DELETE from releasecicd WHERE id='$tid'"
    done

else
	civersion="${g_civersion};$civersion"
        num=`expr 1 + ${g_num}`
	/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;update releasecicd set civersion='$civersion', num='$num', commitid='$curcommit' where rid='$rid' and fid='$ifid' and appname='$appname';"
fi
#88888end

########

else

#处理直接在master分支开发的代码
#99999start
if [ -z "$g_civersion" ]; then
#if [[ "$g_civersion" == "" ]] && [[ "$deploytime" == "" ]];then
 	num=1
        prdversion=$civersion
	/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;insert into releasecicd(rid,fid,rnotes,appname,civersion,openedby,openeddate,fidstatus,cicdtime,num,prdversion,commitid) values('$rid','$ifid','$rnote','$appname','$civersion','$openedby','$openeddate','$fidstatus','$cicdtime','$num','$prdversion','$curcommit');"	
       #从未提测进入提测
       testid=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -N -e 'SELECT id from releasecicd WHERE cicdtime is null and fid in (SELECT DISTINCT fid from releasecicd d WHERE d.cicdtime is not null)'`
       for tid in ${testid[*]}
       do
         /usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "DELETE from releasecicd WHERE id='$tid'"
       done

else
#其他分支合并到master后的测试发布
prdversion=$civersion
civersion="${g_civersion};$civersion"
num=`expr 1 + ${g_num}`
/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;update releasecicd set civersion='$civersion', num='$num', commitid='$curcommit', prdversion='$prdversion' where rid='$rid' and fid='$ifid' and appname='$appname';"

fi
#99999end


#77777end
fi

arnotes="$arnotes\n[$ifid;$rnote;$openedby;$openeddate]"

done

rnotes=`echo -e $arnotes`

echo $rnotes

/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2 -e "set names utf8;insert into releasenotes(rid,appname,rnotes,civersion,commitid) values('$rid','$appname','$rnotes','$civersion','$curcommit');"

done

fi
#55555end

#############bug#########

#AAA start
if [[ "`cat $randlogb |wc -l`" -ne 0 ]];then

#bugid循环
#行转列
#awk -F " " '{for(i=1;i<=NF;i++) a[i,NR]=$i}END{for(i=1;i<=NF;i++) {for(j=1;j<=NR;j++) printf a[i,j] " ";print ""}}'

bid=`/opt/scm_tools/deploy/bidadd  $randlogb| sed  's/,/ /g'|sed  's/，/ /g'`
echo bid: $bid

for ibid in ${bid[*]}
do

rnote=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select title from zt_bug WHERE id='$ibid';"`

openedby=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedBy from zt_bug WHERE id='$ibid';"`

openeddate=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedDate from zt_bug WHERE id='$ibid';"`

########new

g_civersion=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin  -N -e "set names utf8; select civersion from releasecicd WHERE bid='$ibid' and appname='$appname';"`
g_cicdtime=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin  -N -e "set names utf8; select cicdtime from releasecicd WHERE bid='$ibid' and appname='$appname';"`
g_num=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin  -N -e "set names utf8; select num from releasecicd WHERE bid='$ibid' and appname='$appname';"`

fidstatus='已提测'

#BBB start
if [ ! -f "/opt/applications/jenkinsCount/${appname}.count" ];then
echo 0 > /opt/applications/jenkinsCount/${appname}.count
fi
#BBB end

bcount=`cat /opt/applications/jenkinsCount/${appname}.count`
civersion=${branch}.${curcommit}.build.`date "+%Y-%m-%d_%H:%M:%S"`.$(($bcount+1))
echo $(($bcount+1)) > /opt/applications/jenkinsCount/${appname}.count
echo civersion: $civersion

cicdtime=`date +"%Y-%m-%d %H:%M:%S"`

########

#CCC start
if [[ "`echo $civersion | grep "master"`" == "" ]];then

fidstatus='已提测'

#DDD start
if [ -z "$g_civersion" ]; then
#if [[ "$g_civersion" == "" ]] && [[ "$deploytime" == "" ]];then
    num=1
    /usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;insert into releasecicd(bid,rnotes,appname,civersion,openedby,openeddate,fidstatus,cicdtime,num,commitid) values('$ibid','$rnote','$appname','$civersion','$openedby','$openeddate','$fidstatus','$cicdtime','$num','$curcommit');"
else
        civersion="${g_civersion};$civersion"
        num=`expr 1 + ${g_num}`
        /usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;update releasecicd set civersion='$civersion', num='$num', commitid='$curcommit' where bid='$ibid' and appname='$appname';"
fi
#DDD end

########

else

#处理直接在master分支开发的代码
#EEE start
if [ -z "$g_civersion" ]; then
#if [[ "$g_civersion" == "" ]] && [[ "$deploytime" == "" ]];then
        num=1
        prdversion=$civersion
/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;insert into releasecicd(bid,rnotes,appname,civersion,openedby,openeddate,fidstatus,cicdtime,num,prdversion,commitid) values('$ibid','$rnote','$appname','$civersion','$openedby','$openeddate','$fidstatus','$cicdtime','$num','$prdversion','$curcommit');"
if [ $? -eq 1 ]; then
    echo "数据插入出错"
    exit 1
fi

else
#其他分支合并到master后的测试发布
prdversion=$civersion
civersion="${g_civersion};$civersion"
num=`expr 1 + ${g_num}`
/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* cicdadmin -e "set names utf8;update releasecicd set civersion='$civersion', num='$num', commitid='$curcommit', prdversion='$prdversion' where bid='$ibid' and appname='$appname';"

fi
#EEE end
########

fi
#CCC end

/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2 -e "set names utf8;insert into releasenotes(bid,appname,rnotes,civersion,commitid) values('$bid','$appname','$rnote','$civersion','$curcommit');"

done

fi
#AAA end

exit 0

fi
#11111end


#########################

svn info > /dev/null 2>&1
if [ $? -eq 0 ]; then

if [[ $1 =~ test2 ]] || [[ $1 =~ test3 ]]
then
     appname=`echo $1 | awk -F'-' '{print $3}'`
else
     appname=`echo $1 | awk -F'-' '{print $2}'`
fi

echo appname: $appname

curcommit=`svn info|sed -n -e '/Revision:/p'|awk '{print $2}'`

ridinfo=`svn log -l 1|sed -n -e '/rid/p'`

rid=`/opt/scm_tools/deploy/ridfid "$ridinfo"| sed -n '1p'`
echo rid: $rid

fid=`/opt/scm_tools/deploy/ridfid "$ridinfo"| sed -n '2p'`
fid=`echo ${fid[*]}|awk '{for(i=1;i<=NF;i++)a[$i,NR]++}{for(j in a){split(j,b,SUBSEP);if(b[2]==NR)printf b[1]" "} printf "\n"}'| sed -e 's/,/ /g'| sed -e 's/，/ /g'`
echo fid: $fid

if [ ! -f "/opt/applications/jenkinsCount/${appname}.count" ];then
echo 0 > /opt/applications/jenkinsCount/${appname}.count
fi
bcount=`cat /opt/applications/jenkinsCount/${appname}.count`
civersion="trunk.${curcommit}.build.`date "+%Y-%m-%d_%H:%M:%S"`.$(($bcount+1))"
echo $(($bcount+1)) > /opt/applications/jenkinsCount/${appname}.count

developer=`svn info| sed -n '/Author:/p'| awk -F'Author:' '{print $2}'`

deploytime=`date +"%Y-%m-%d"`

fidstatus='已提测'

arnotes=""

for ifid in ${fid[*]}
do

rnote=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select title from zt_story WHERE id='$ifid';"`

openedby=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedBy from zt_story WHERE id='$ifid';"`

openeddate=`/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2  -N -e "set names utf8; select openedDate from zt_story WHERE id='$ifid';"`

/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2 -e "set names utf8;insert into releasedeploy(rid,fid,appname,rnotes,openedby,openeddate,civersion,commitid,status,deploytime) values('$rid','$ifid','$appname','$rnote','$openedby','$openeddate','$civersion','$curcommit','$fidstatus','$deploytime');"

arnotes="$arnotes\n[$ifid;$rnote;$openedby;$openeddate]"

done

rnotes=`echo -e $arnotes`

echo $rnotes

/usr/bin/mysql -hxx.xx.xx.xx -udeployer -p************* zentao2 -e "set names utf8;insert into releasenotes(rid,appname,rnotes,civersion,commitid) values('$rid','$appname','$rnotes','$civersion','$curcommit');"

fi
